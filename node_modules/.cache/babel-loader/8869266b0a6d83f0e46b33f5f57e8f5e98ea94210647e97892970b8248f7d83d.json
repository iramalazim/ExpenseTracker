{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\ExpenseTracker\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = () => {\n  _s();\n  // const [enteredTitle, setEnteredTitle] = useState('');\n  // const [enteredAmount, setEnteredAmount] = useState('');\n  // const [enteredDate, setEnteredDate] = useState('');\n  const [userInput, setUserInput] = useState({\n    enteredTitle: '',\n    enteredAmount: '',\n    enteredDate: ''\n  });\n  const titleChangeHandeler = event => {\n    // setEnteredTitle(event.target.value);\n\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value\n    // }) This is not a good Practice as it is not guaranteed to give the latest state value \n    // and it is dependig on the previous state value for updating the current State\n\n    setUserInput(prevState => {\n      return {\n        ...prevState,\n        enteredTitle: event.targt.value\n      };\n    });\n  };\n  const amountChangeHandeler = event => {\n    // setEnteredAmount(event.target.value);\n    setUserInput({\n      ...userInput,\n      enteredAmount: event.target.value\n    });\n  };\n  const dateChangeHandeler = event => {\n    // setEnteredDate(event.target.value);\n    setUserInput({\n      ...userInput,\n      enteredDate: event.target.value\n    });\n    console.log(userInput);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandeler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandeler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandeler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseForm, \"p/UdkZQvYSiv0M8ni3DSTWcX5vE=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExpenseForm","_s","userInput","setUserInput","enteredTitle","enteredAmount","enteredDate","titleChangeHandeler","event","prevState","targt","value","amountChangeHandeler","target","dateChangeHandeler","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","step","max","_c","$RefreshReg$"],"sources":["E:/Projects/ExpenseTracker/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = () => {\r\n  // const [enteredTitle, setEnteredTitle] = useState('');\r\n  // const [enteredAmount, setEnteredAmount] = useState('');\r\n  // const [enteredDate, setEnteredDate] = useState('');\r\n  const [userInput, setUserInput] = useState({\r\n    enteredTitle: '',\r\n    enteredAmount: '',\r\n    enteredDate: ''\r\n  });\r\n\r\n  const titleChangeHandeler = (event) =>{\r\n    // setEnteredTitle(event.target.value);\r\n    \r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value\r\n    // }) This is not a good Practice as it is not guaranteed to give the latest state value \r\n    // and it is dependig on the previous state value for updating the current State\r\n\r\n    setUserInput((prevState)=>{\r\n      return {...prevState, enteredTitle: event.targt.value}\r\n    })\r\n\r\n  }\r\n\r\n  const amountChangeHandeler = (event) =>{\r\n    // setEnteredAmount(event.target.value);\r\n    setUserInput({\r\n      ...userInput,\r\n      enteredAmount: event.target.value\r\n    })\r\n  }\r\n\r\n  const dateChangeHandeler = (event) =>{\r\n    // setEnteredDate(event.target.value);\r\n    setUserInput({\r\n      ...userInput,\r\n      enteredDate: event.target.value\r\n    })\r\n    \r\n    console.log(userInput);\r\n  }\r\n  return (\r\n    <form>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" onChange={titleChangeHandeler}/>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input type=\"number\" min=\"0.01\" step=\"0.01\" onChange={amountChangeHandeler}/>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandeler}/>\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}