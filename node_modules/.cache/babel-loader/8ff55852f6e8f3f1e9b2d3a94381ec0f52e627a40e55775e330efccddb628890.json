{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\ExpenseTracker\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n  const filterExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Expenses Found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }, this);\n  if (filterExpenses.length > 0) {\n    expensesContent = filterExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","jsxDEV","_jsxDEV","Fragment","_Fragment","Expenses","props","_s","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filterExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","title","amount","id","className","selected","onChangeFilter","_c","$RefreshReg$"],"sources":["E:/Projects/ExpenseTracker/src/components/Expenses/Expenses.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filterExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expensesContent = <p>No Expenses Found.</p>;\n  if (filterExpenses.length > 0) {\n    expensesContent = filterExpenses.map((expense) => (\n      <ExpenseItem\n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n      />\n    ));\n  }\n  return (\n    <>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n\n        {expensesContent}\n        {/* {filterExpenses.map((expense) => (\n          <ExpenseItem\n            key={expense.id}\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n          />\n        ))} */}\n\n        {/* <ExpenseItem\n          title={props.items[0].title}\n          amount={props.items[0].amount}\n          date={props.items[0].date}\n        />\n        <ExpenseItem\n          title={props.items[1].title}\n          amount={props.items[1].amount}\n          date={props.items[1].date}\n        />\n        <ExpenseItem\n          title={props.items[2].title}\n          amount={props.items[2].amount}\n          date={props.items[2].date}\n        />\n        <ExpenseItem\n          title={props.items[3].title}\n          amount={props.items[3].amount}\n          date={props.items[3].date}\n        /> */}\n      </Card>\n    </>\n  );\n};\n\nexport default Expenses;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,gBAAgB;AACvB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC9C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,MAAM,CAAC;EAExD,MAAMa,mBAAmB,GAAIC,YAAY,IAAK;IAC5CF,eAAe,CAACE,YAAY,CAAC;EAC/B,CAAC;EAED,MAAMC,cAAc,GAAGN,KAAK,CAACO,KAAK,CAACC,MAAM,CAAEC,OAAO,IAAK;IACrD,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKV,YAAY;EAC/D,CAAC,CAAC;EAEF,IAAIW,eAAe,gBAAGjB,OAAA;IAAAkB,QAAA,EAAG;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC/C,IAAIZ,cAAc,CAACa,MAAM,GAAG,CAAC,EAAE;IAC7BN,eAAe,GAAGP,cAAc,CAACc,GAAG,CAAEX,OAAO,iBAC3Cb,OAAA,CAACJ,WAAW;MAEV6B,KAAK,EAAEZ,OAAO,CAACY,KAAM;MACrBC,MAAM,EAAEb,OAAO,CAACa,MAAO;MACvBZ,IAAI,EAAED,OAAO,CAACC;IAAK,GAHdD,OAAO,CAACc,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIhB,CACF,CAAC;EACJ;EACA,oBACEtB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACElB,OAAA,CAACH,IAAI;MAAC+B,SAAS,EAAC,UAAU;MAAAV,QAAA,gBACxBlB,OAAA,CAACF,cAAc;QACb+B,QAAQ,EAAEvB,YAAa;QACvBwB,cAAc,EAAEtB;MAAoB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,EAEDL,eAAe;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA8BZ;EAAC,gBACP,CAAC;AAEP,CAAC;AAACjB,EAAA,CA/DIF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAiEd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}